Configured for debug.
   >> address: 0.0.0.0
   >> port: 8080
   >> workers: 16
   >> ident: Kinesis API
   >> keep-alive: 5s
   >> limits: bytes = 8KiB, data-form = 2MiB, file = 1MiB, file/jpg = 20MiB, form = 32KiB, forms = 64kB, json = 5MiB, msgpack = 5MiB, string = 8KiB
   >> tls: disabled
   >> temp dir: /tmp
   >> log level: normal
   >> cli colors: true
   >> shutdown: ctrlc = true, force = true, signals = [SIGTERM], grace = 2s, mercy = 3s
Routes:
   >> (welcome) GET /
   >> OPTIONS /<catch_all_options_route..> [9223372036854775807]
   >> (world) GET /tmp/hello/world
   >> (wave) GET /tmp/wave/<name>/<age>
   >> (call_initialize) GET /init/code?<code>
   >> (fetch_all) POST /user/fetch?<limit>&<offset> application/json
   >> (login) POST /user/login application/json
   >> (fetch) POST /data/fetch application/json
   >> (verify) POST /user/verify application/json
   >> (update) POST /user/update application/json
   >> (delete) POST /user/delete application/json
   >> (create) POST /data/create application/json
   >> (update) POST /data/update application/json
   >> (delete) POST /data/delete application/json
   >> (publish) POST /data/publish application/json
   >> (register) POST /user/register application/json
   >> GET /cors/<status>
   >> (fetch_one) POST /user/fetch/one application/json
   >> (login_jwt) POST /user/login/jwt application/json
   >> (fetch_one) POST /data/fetch/one application/json
   >> (test_mongo) POST /misc/test/mongo application/json
   >> (update_role) POST /user/update/role application/json
   >> (fetch_all) POST /media/fetch?<limit>&<offset> application/json
   >> (create) POST /media/create application/json
   >> (update) POST /media/update application/json
   >> (delete) POST /media/delete application/json
   >> (fetch_one) POST /media/fetch/one application/json
   >> (upload) POST /upload/
   >> (add) POST /config/add application/json
   >> (fetch_all) POST /config/fetch?<limit>&<offset> application/json
   >> (update) POST /config/update application/json
   >> (delete) POST /config/delete application/json
   >> (FileServer: public/) GET /public/<path..> [10]
   >> (fetch_one) POST /config/fetch/one application/json
   >> (fetch_all) POST /project/fetch?<limit>&<offset> application/json
   >> (create) POST /project/create application/json
   >> (update) POST /project/update application/json
   >> (delete) POST /project/delete application/json
   >> (fetch_one) POST /project/fetch/one application/json
   >> (add_member) POST /project/member/add application/json
   >> (remove_member) POST /project/member/remove application/json
   >> (add) POST /structure/add application/json
   >> (update) POST /structure/update application/json
   >> (delete) POST /structure/delete application/json
   >> (fetch) POST /collection/fetch application/json
   >> (create) POST /collection/create application/json
   >> (update) POST /collection/update application/json
   >> (delete) POST /collection/delete application/json
   >> (fetch_one) POST /collection/fetch/one application/json
   >> (add) POST /custom_structure/add application/json
   >> (update) POST /custom_structure/update application/json
   >> (delete) POST /custom_structure/delete application/json
Catchers:
   >> (bad_request) 400
   >> (unauthorized) 401
   >> (not_found) 404
   >> (malformed_request) 422
   >> (internal_server_error) 500
Fairings:
   >> CORS (ignite, request, response)
   >> Templating (ignite, liftoff, request)
   >> Shield (liftoff, response, singleton)
Shield:
   >> X-Content-Type-Options: nosniff
   >> Permissions-Policy: interest-cohort=()
   >> X-Frame-Options: SAMEORIGIN
Templating:
   >> directory: templates
   >> engines: ["tera"]
Rocket has launched from http://0.0.0.0:8080
